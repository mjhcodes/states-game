{"version":3,"sources":["components/Header.js","components/UserForm.js","components/StartClock.js","components/TotalStates.js","components/DisplayResults.js","components/QuizLogic.js","resultsList.js","App.js","index.js"],"names":["Header","icon","faCouch","className","UserForm","getAnswer","textBoxRef","isTimeRunning","useState","answer","setAnswer","onSubmit","e","preventDefault","trim","toLowerCase","current","focus","handleSubmit","ref","type","name","value","onChange","target","disabled","required","StartClock","timeRemaining","startGame","minutes","Math","floor","seconds","onClick","TotalStates","motivation","color","tracker","userAnswers","startingTime","length","style","DisplayResults","map","state","index","key","faCheckCircle","QuizLogic","setUserAnswers","setTimeRemaining","setIsTimeRunning","useRef","endGame","useEffect","setTimeout","time","resultsList","App","includes","newAnswers","sort","alert","toUpperCase","ReactDOM","render","document","getElementById"],"mappings":"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B,EAAerB,IAEZ,CACLgC,cACAW,iBACAtB,gBACArB,gBACAsB,YACAvB,aACAkC,iBCgBWkB,EArDK,CAClB,UACA,SACA,UACA,WACA,aACA,WACA,cACA,WACA,UACA,UACA,SACA,QACA,WACA,UACA,OACA,SACA,WACA,YACA,QACA,WACA,gBACA,WACA,YACA,cACA,WACA,UACA,WACA,SACA,gBACA,aACA,aACA,WACA,iBACA,eACA,OACA,WACA,SACA,eACA,eACA,iBACA,eACA,YACA,QACA,OACA,UACA,WACA,aACA,gBACA,YACA,WCUaC,EAnDH,WAAO,IAAD,EASZV,IAPFV,EAFc,EAEdA,YACAW,EAHc,EAGdA,eACAtB,EAJc,EAIdA,cACArB,EALc,EAKdA,cACAsB,EANc,EAMdA,UACAvB,EAPc,EAOdA,WACAkC,EARc,EAQdA,aAcF,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,0BAAMrC,UAAU,aACd,kBAAC,EAAD,CACEE,UAhBU,SAAAI,GAChB,GAAIiD,EAAYE,SAASnD,KAAY8B,EAAYqB,SAASnD,GAAS,CACjE,IAAMoD,EAAU,CAAIpD,GAAJ,mBAAe8B,IAC/BW,EAAeW,EAAWC,aACjBvB,EAAYqB,SAASnD,GAC9BsD,MAAM,GAAD,OAAItD,EAAOuD,cAAX,sCACKN,EAAYE,SAASnD,IAC/BsD,MAAM,GAAD,OAAItD,EAAOuD,cAAX,gCAUD1D,WAAYA,EACZC,cAAeA,IAEjB,kBAAC,EAAD,CACEqB,cAAeA,EACfC,UAAWA,EACXtB,cAAeA,IAEjB,kBAAC,EAAD,CACEA,cAAeA,EACfqB,cAAeA,EACfW,YAAaA,EACbC,aAAcA,IAEhB,kBAAC,EAAD,CACED,YAAaA,EACbX,cAAeA,OChDzBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f8a730cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCouch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = () => {\n  return (\n    <header>\n      <FontAwesomeIcon icon={faCouch} className=\"header-logo\" />\n      <div>\n        <h1 className=\"header-old-title\">\n          The One Where Chandler Doesn't Like Dogs\n        </h1>\n        <h1 className=\"header-new-title\">The One With The States</h1>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst UserForm = ({ getAnswer, textBoxRef, isTimeRunning }) => {\n  const [answer, setAnswer] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getAnswer(answer.trim(\" \").toLowerCase());\n    setAnswer(\"\");\n    textBoxRef.current.focus();\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={e => handleSubmit(e)}>\n        <h4 className=\"form-title\">Can you name all of the states?</h4>\n        <input\n          className=\"form-field\"\n          ref={textBoxRef}\n          type=\"text\"\n          name=\"answer\"\n          value={answer}\n          onChange={e => setAnswer(e.target.value)}\n          disabled={!isTimeRunning}\n          required\n        />\n        <small className=\"form-subtitle\">\n          Types of celery are NOT permitted\n        </small>\n        <button className=\"form-btn-submit\" disabled={!isTimeRunning}>\n          SUBMIT\n        </button>\n      </form>\n    </div>\n  );\n};\n\nUserForm.propTypes = {\n  getAnswer: PropTypes.func.isRequired,\n  textBoxRef: PropTypes.object.isRequired,\n  isTimeRunning: PropTypes.bool.isRequired,\n};\n\nexport default UserForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst StartClock = ({ timeRemaining, startGame, isTimeRunning }) => {\n  const minutes = Math.floor(timeRemaining / 60);\n  const seconds = timeRemaining - minutes * 60;\n\n  return (\n    <div className=\"clock-container\">\n      <h2 className=\"clock-title\">Time Remaining:</h2>\n      {timeRemaining > 59 ? (\n        <p className=\"clock-time\">\n          {minutes} minute(s) and {seconds} second(s)\n        </p>\n      ) : (\n        <p className=\"clock-time clock-color\">\n          {minutes} minute(s) and {seconds} second(s)\n        </p>\n      )}\n      <button\n        onClick={startGame}\n        className=\"form-btn-start\"\n        disabled={isTimeRunning}\n      >\n        START\n      </button>\n    </div>\n  );\n};\n\nStartClock.propTypes = {\n  timeRemaining: PropTypes.number.isRequired,\n  startGame: PropTypes.func.isRequired,\n  isTimeRunning: PropTypes.bool.isRequired,\n};\n\nexport default StartClock;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TotalStates = ({\n  isTimeRunning,\n  timeRemaining,\n  userAnswers,\n  startingTime,\n}) => {\n  let motivation;\n  let color;\n  if (!isTimeRunning && userAnswers.length === 0) {\n    motivation = \"Let's get started!\";\n  } else if (isTimeRunning && userAnswers.length === 0) {\n    motivation = \"Here we go! Good luck!\";\n  } else if (isTimeRunning && userAnswers.length < 10) {\n    motivation = \"Great start! Keep going!\";\n  } else if (isTimeRunning && userAnswers.length < 20) {\n    motivation = \"Nice! Double digits! It's insanely easy, huh?\";\n  } else if (isTimeRunning && userAnswers.length < 30) {\n    motivation = \"In the 20's now! Have you tried South Oregon yet?\";\n  } else if (isTimeRunning && userAnswers.length < 36) {\n    motivation = \"The dirty 30's! Try New England. They have a sports team!\";\n  } else if (isTimeRunning && userAnswers.length < 37) {\n    motivation = \"Fourteen states to go. Remember, WE care about the Dakotas!\";\n  } else if (isTimeRunning && userAnswers.length < 40) {\n    motivation = \"Can you get all 50 before dinner?\";\n  } else if (isTimeRunning && userAnswers.length < 45) {\n    motivation = \"Over the hill! Almost there!\";\n  } else if (isTimeRunning && userAnswers.length < 49) {\n    motivation =\n      \"Look, if you don't know them by now, you will never know them, okay?\";\n  } else if (isTimeRunning && userAnswers.length < 50) {\n    motivation = \"Don't listen to Ross. There IS one more!\";\n  } else if (userAnswers.length === 50) {\n    motivation =\n      \"CONGRATULATIONS! You are the new champ of Chandler's dumb states game!\";\n    color = \"green\";\n  }\n\n  let tracker;\n  if (timeRemaining === 0) {\n    tracker = `Time's up! You remembered ${userAnswers.length} states!`;\n  } else if (timeRemaining === startingTime) {\n    tracker = \"FYI. There's only 50 states, not 56.\";\n  } else {\n    tracker = `You've guessed ${userAnswers.length} / 50 states!`;\n  }\n\n  return (\n    <div className=\"total-container\">\n      <h3 className=\"total-title\">{tracker}</h3>\n      <p className=\"total-subtitle\" style={{ color }}>\n        {motivation}\n      </p>\n    </div>\n  );\n};\n\nTotalStates.propTypes = {\n  isTimeRunning: PropTypes.bool.isRequired,\n  timeRemaining: PropTypes.number.isRequired,\n  userAnswers: PropTypes.array.isRequired,\n  startingTime: PropTypes.number.isRequired,\n};\n\nexport default TotalStates;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DisplayResults = ({ userAnswers }) => {\n  return (\n    <div className=\"state-container\">\n      {userAnswers.map((state, index) => (\n        <div key={index} className=\"state-item\">\n          <FontAwesomeIcon icon={faCheckCircle} className=\"state-check\" />\n          <p className=\"state-name\">{state}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nDisplayResults.propTypes = {\n  userAnswers: PropTypes.array.isRequired,\n};\n\nexport default DisplayResults;\n","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizLogic = (startingTime = 360) => {\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [timeRemaining, setTimeRemaining] = useState(startingTime);\n  const [isTimeRunning, setIsTimeRunning] = useState(false);\n  const textBoxRef = useRef(null);\n\n  const startGame = () => {\n    setUserAnswers([]);\n    setIsTimeRunning(true);\n    setTimeRemaining(startingTime);\n    textBoxRef.current.disabled = false;\n    textBoxRef.current.focus();\n  };\n\n  const endGame = () => {\n    setIsTimeRunning(false);\n  };\n\n  useEffect(() => {\n    if (userAnswers.length < 50 && isTimeRunning && timeRemaining > 0) {\n      setTimeout(() => {\n        setTimeRemaining(time => time - 1);\n      }, 1000);\n    } else {\n      endGame();\n    }\n  }, [timeRemaining, isTimeRunning]);\n\n  return {\n    userAnswers,\n    setUserAnswers,\n    timeRemaining,\n    isTimeRunning,\n    startGame,\n    textBoxRef,\n    startingTime,\n  };\n};\n\nexport default QuizLogic;\n","const resultsList = [\n  \"alabama\",\n  \"alaska\",\n  \"arizona\",\n  \"arkansas\",\n  \"california\",\n  \"colorado\",\n  \"connecticut\",\n  \"delaware\",\n  \"florida\",\n  \"georgia\",\n  \"hawaii\",\n  \"idaho\",\n  \"illinois\",\n  \"indiana\",\n  \"iowa\",\n  \"kansas\",\n  \"kentucky\",\n  \"louisiana\",\n  \"maine\",\n  \"maryland\",\n  \"massachusetts\",\n  \"michigan\",\n  \"minnesota\",\n  \"mississippi\",\n  \"missouri\",\n  \"montana\",\n  \"nebraska\",\n  \"nevada\",\n  \"new hampshire\",\n  \"new jersey\",\n  \"new mexico\",\n  \"new york\",\n  \"north carolina\",\n  \"north dakota\",\n  \"ohio\",\n  \"oklahoma\",\n  \"oregon\",\n  \"pennsylvania\",\n  \"rhode island\",\n  \"south carolina\",\n  \"south dakota\",\n  \"tennessee\",\n  \"texas\",\n  \"utah\",\n  \"vermont\",\n  \"virginia\",\n  \"washington\",\n  \"west virginia\",\n  \"wisconsin\",\n  \"wyoming\",\n];\n\nexport default resultsList;\n","import React, { Fragment } from \"react\";\nimport Header from \"./components/Header\";\nimport UserForm from \"./components/UserForm\";\nimport StartClock from \"./components/StartClock\";\nimport TotalStates from \"./components/TotalStates\";\nimport DisplayResults from \"./components/DisplayResults\";\nimport QuizLogic from \"./components/QuizLogic\";\nimport resultsList from \"./resultsList\";\n\nconst App = () => {\n  const {\n    userAnswers,\n    setUserAnswers,\n    timeRemaining,\n    isTimeRunning,\n    startGame,\n    textBoxRef,\n    startingTime,\n  } = QuizLogic();\n\n  const getAnswer = answer => {\n    if (resultsList.includes(answer) && !userAnswers.includes(answer)) {\n      const newAnswers = [answer, ...userAnswers];\n      setUserAnswers(newAnswers.sort());\n    } else if (userAnswers.includes(answer)) {\n      alert(`${answer.toUpperCase()} has already been guessed! Pivot!`);\n    } else if (!resultsList.includes(answer)) {\n      alert(`${answer.toUpperCase()}?! That's not even a word!`);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <main className=\"container\">\n        <UserForm\n          getAnswer={getAnswer}\n          textBoxRef={textBoxRef}\n          isTimeRunning={isTimeRunning}\n        />\n        <StartClock\n          timeRemaining={timeRemaining}\n          startGame={startGame}\n          isTimeRunning={isTimeRunning}\n        />\n        <TotalStates\n          isTimeRunning={isTimeRunning}\n          timeRemaining={timeRemaining}\n          userAnswers={userAnswers}\n          startingTime={startingTime}\n        />\n        <DisplayResults\n          userAnswers={userAnswers}\n          timeRemaining={timeRemaining}\n        />\n      </main>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}